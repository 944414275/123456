<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.CapitionLogo" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>